
spring:
  profiles:
    active: dev

server:
  port: 8086
  servlet:
    session:
      cookie:
        name: OAUTHSESSION #关键！鉴权成功后，对于单点登录过滤链来说，只需要携带这个session cookie就能继续访问；对于token过滤链则无用

auth-server: http://localhost:8085/uac

security:
  oauth2:
    client:  #配置app-client端信息，比如这里配置了clientId,clientSecret,认证服务器请求token相关的url（这里均为框架默认的地址）
      client-id: sheep1
      client-secret: 123456
      user-authorization-uri: ${auth-server}/oauth/authorize #authorization_code、implicit获取token时，需要从这个url获得授权，其中implicit直接返回token
      access-token-uri: ${auth-server}/oauth/token #请求token的地址 client_credentials、password、refresh_token获取token时，需要从这个url获得授权
    resource:  #配置resource-server端信息，比如这里配置了获得JWT—token的公钥地址,校验token地址
               #token_key用来为资源服务器获取验证token的公钥，check_token也是用来为资源服务器获取验证token的地址
               #公钥进行解密token，从而验证token是否是授权服务器合法颁发的，通过即放行访问资源服务器上的资源
      jwt:
        key-uri: ${auth-server}/oauth/token_key
        user-info-uri: ${auth-server}/oauth/client
      token-info-uri: ${auth-server}/oauth/check_token
